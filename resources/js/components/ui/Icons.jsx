import React from "react";

// Clase base para los iconos, puedes añadirla a cada SVG o aplicarla desde donde uses el icono
// const iconBaseClass = "nav-icon"; // O simplemente aplica la clase en Navbar.css

export const UsersIcon = ({ className = "nav-icon" }) => (
    <svg viewBox="0 0 20 20" fill="currentColor" className={className}>
        <path d="M9 6a3 3 0 11-6 0 3 3 0 016 0zM17 6a3 3 0 11-6 0 3 3 0 016 0zM12.93 17c.046-.327.07-.66.07-1a6.97 6.97 0 00-1.5-4.33A5 5 0 0119 16v1h-6.07zM6 11a5 5 0 015 5v1H1v-1a5 5 0 015-5z" />
    </svg>
);

export const ClientsIcon = ({ className = "nav-icon" }) => (
    <svg viewBox="0 0 20 20" fill="currentColor" className={className}>
        <path
            fillRule="evenodd"
            d="M4 4a2 2 0 00-2 2v8a2 2 0 002 2h12a2 2 0 002-2V8a2 2 0 00-2-2h-5L9 4H4zm4.586 1a1 1 0 00-.707.293L6.586 6.586a1 1 0 101.414 1.414L10 6.414l1.293 1.293a1 1 0 001.414-1.414L11.414 5S11 5 10.707 5H8.586z"
            clipRule="evenodd"
        />
    </svg>
);

export const SurveyIcon = ({ className = "nav-icon" }) => (
    <svg viewBox="0 0 20 20" fill="currentColor" className={className}>
        <path d="M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z" />
        <path
            fillRule="evenodd"
            d="M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z"
            clipRule="evenodd"
        />
    </svg>
);

export const LogoutIcon = (
    props // Aceptamos props para pasar className, style, etc.
) => (
    <svg
        xmlns="http://www.w3.org/2000/svg"
        xmlnsXlink="http://www.w3.org/1999/xlink"
        viewBox="0 0 375 374.999991"
        fill="currentColor" // ¡Importante! Para heredar el color del texto del botón.
        preserveAspectRatio="xMidYMid meet"
        // Quitamos width y height fijos para que sea escalable con CSS
        {...props} // Permite pasar className, style, onClick, etc.
    >
        <defs>
            {/* Es buena práctica hacer los IDs un poco más únicos si hay riesgo de colisión */}
            <clipPath id="logout_clip_1">
                <path d="M 57.550781 48.890625 L 232 48.890625 L 232 326.390625 L 57.550781 326.390625 Z M 57.550781 48.890625 " />
            </clipPath>
            <clipPath id="logout_clip_2">
                <path d="M 109 127 L 317.800781 127 L 317.800781 249 L 109 249 Z M 109 127 " />
            </clipPath>
        </defs>
        {/*
        Los <rect> con fill:#ffffff originales eran para un fondo blanco.
        Si quieres que el ícono no tenga fondo propio y se adapte al fondo del botón,
        puedes eliminarlos. Si el ícono SÍ necesita un fondo blanco específico, déjalos
        pero NO les pongas fill="currentColor".
        Para un ícono en un botón, usualmente no queremos un fondo propio en el SVG.
      */}
        {/* <rect x="0" width="375" y="0" height="374.999991" style={{ fill: '#ffffff', fillOpacity: 1 }} /> */}
        <g id="logout_icon_group">
            {" "}
            {/* ID opcionalmente más único */}
            <g clipRule="nonzero" clipPath="url(#logout_clip_1)">
                <path
                    style={{
                        stroke: "none",
                        fillRule: "nonzero",
                        fillOpacity: 1,
                    }}
                    // fill ya está establecido a "currentColor" en el <svg> principal
                    // o puedes poner fill: 'currentColor' aquí explícitamente si prefieres
                    d="M 222.378906 230.996094 C 221.808594 230.996094 221.242188 231.054688 220.683594 231.164062 C 220.125 231.273438 219.582031 231.441406 219.058594 231.65625 C 218.53125 231.875 218.03125 232.140625 217.558594 232.457031 C 217.082031 232.773438 216.644531 233.132812 216.242188 233.539062 C 215.839844 233.941406 215.480469 234.378906 215.164062 234.851562 C 214.847656 235.324219 214.582031 235.824219 214.363281 236.351562 C 214.144531 236.875 213.980469 237.417969 213.867188 237.976562 C 213.757812 238.535156 213.703125 239.097656 213.703125 239.667969 L 213.703125 309.042969 L 74.902344 309.042969 L 74.902344 66.234375 L 213.703125 66.234375 L 213.703125 135.609375 C 213.703125 136.179688 213.757812 136.742188 213.867188 137.300781 C 213.980469 137.859375 214.144531 138.402344 214.363281 138.925781 C 214.582031 139.453125 214.847656 139.953125 215.164062 140.425781 C 215.480469 140.898438 215.839844 141.339844 216.242188 141.742188 C 216.644531 142.144531 217.082031 142.503906 217.558594 142.820312 C 218.03125 143.136719 218.53125 143.402344 219.058594 143.621094 C 219.582031 143.839844 220.125 144.003906 220.683594 144.113281 C 221.242188 144.226562 221.808594 144.28125 222.378906 144.28125 C 222.945312 144.28125 223.511719 144.226562 224.070312 144.113281 C 224.628906 144.003906 225.171875 143.839844 225.695312 143.621094 C 226.222656 143.402344 226.722656 143.136719 227.195312 142.820312 C 227.671875 142.503906 228.109375 142.144531 228.511719 141.742188 C 228.914062 141.339844 229.273438 140.898438 229.589844 140.425781 C 229.90625 139.953125 230.171875 139.453125 230.390625 138.925781 C 230.609375 138.402344 230.773438 137.859375 230.886719 137.300781 C 230.996094 136.742188 231.050781 136.179688 231.050781 135.609375 L 231.050781 57.5625 C 231.050781 56.996094 230.996094 56.429688 230.886719 55.871094 C 230.773438 55.3125 230.609375 54.769531 230.390625 54.246094 C 230.171875 53.71875 229.90625 53.21875 229.589844 52.746094 C 229.273438 52.273438 228.914062 51.835938 228.511719 51.433594 C 228.109375 51.027344 227.671875 50.667969 227.195312 50.351562 C 226.722656 50.035156 226.222656 49.769531 225.695312 49.550781 C 225.171875 49.335938 224.628906 49.167969 224.070312 49.058594 C 223.511719 48.949219 222.945312 48.890625 222.378906 48.890625 L 66.226562 48.890625 C 65.65625 48.890625 65.09375 48.949219 64.535156 49.058594 C 63.976562 49.167969 63.433594 49.335938 62.90625 49.550781 C 62.382812 49.769531 61.882812 50.035156 61.40625 50.351562 C 60.933594 50.667969 60.496094 51.027344 60.09375 51.433594 C 59.691406 51.835938 59.332031 52.273438 59.015625 52.746094 C 58.699219 53.21875 58.429688 53.71875 58.210938 54.246094 C 57.996094 54.769531 57.828125 55.3125 57.71875 55.871094 C 57.609375 56.429688 57.550781 56.996094 57.550781 57.5625 L 57.550781 317.714844 C 57.550781 318.285156 57.609375 318.847656 57.71875 319.40625 C 57.828125 319.964844 57.996094 320.507812 58.210938 321.03125 C 58.429688 321.558594 58.699219 322.058594 59.015625 322.53125 C 59.332031 323.003906 59.691406 323.441406 60.09375 323.847656 C 60.496094 324.25 60.933594 324.609375 61.40625 324.925781 C 61.882812 325.242188 62.382812 325.507812 62.90625 325.726562 C 63.433594 325.945312 63.976562 326.109375 64.535156 326.21875 C 65.09375 326.332031 65.65625 326.386719 66.226562 326.386719 L 222.378906 326.386719 C 222.945312 326.386719 223.511719 326.332031 224.070312 326.21875 C 224.628906 326.109375 225.171875 325.945312 225.695312 325.726562 C 226.222656 325.507812 226.722656 325.242188 227.195312 324.925781 C 227.671875 324.609375 228.109375 324.25 228.511719 323.847656 C 228.914062 323.441406 229.273438 323.003906 229.589844 322.53125 C 229.90625 322.058594 230.171875 321.558594 230.390625 321.03125 C 230.609375 320.507812 230.773438 319.964844 230.886719 319.40625 C 230.996094 318.847656 231.050781 318.285156 231.050781 317.714844 L 231.050781 239.667969 C 231.050781 239.097656 230.996094 238.535156 230.886719 237.976562 C 230.773438 237.417969 230.609375 236.875 230.390625 236.351562 C 230.171875 235.824219 229.90625 235.324219 229.589844 234.851562 C 229.273438 234.378906 228.914062 233.941406 228.511719 233.539062 C 228.109375 233.132812 227.671875 232.773438 227.195312 232.457031 C 226.722656 232.140625 226.222656 231.875 225.695312 231.65625 C 225.171875 231.4375 224.628906 231.273438 224.070312 231.164062 C 223.511719 231.054688 222.945312 230.996094 222.378906 230.996094 Z M 222.378906 230.996094 "
                />
            </g>
            <g clipRule="nonzero" clipPath="url(#logout_clip_2)">
                <path
                    style={{
                        stroke: "none",
                        fillRule: "nonzero",
                        fillOpacity: 1,
                    }}
                    d="M 315.261719 181.507812 L 263.210938 129.476562 C 262.804688 129.085938 262.367188 128.738281 261.894531 128.433594 C 261.421875 128.128906 260.921875 127.871094 260.398438 127.660156 C 259.875 127.453125 259.335938 127.296875 258.785156 127.191406 C 258.230469 127.089844 257.671875 127.039062 257.109375 127.042969 C 256.546875 127.050781 255.988281 127.109375 255.4375 127.222656 C 254.882812 127.335938 254.347656 127.5 253.828125 127.71875 C 253.308594 127.9375 252.816406 128.203125 252.347656 128.515625 C 251.878906 128.828125 251.449219 129.183594 251.050781 129.582031 C 250.652344 129.980469 250.296875 130.414062 249.980469 130.882812 C 249.667969 131.347656 249.402344 131.84375 249.183594 132.363281 C 248.964844 132.882812 248.800781 133.417969 248.6875 133.96875 C 248.574219 134.519531 248.515625 135.078125 248.507812 135.640625 C 248.503906 136.203125 248.554688 136.761719 248.65625 137.316406 C 248.761719 137.867188 248.917969 138.40625 249.125 138.929688 C 249.335938 139.453125 249.59375 139.949219 249.898438 140.421875 C 250.203125 140.894531 250.550781 141.335938 250.945312 141.738281 L 288.183594 178.96875 L 118.277344 178.96875 C 117.707031 178.96875 117.144531 179.023438 116.585938 179.132812 C 116.027344 179.246094 115.484375 179.410156 114.957031 179.628906 C 114.429688 179.84375 113.929688 180.113281 113.457031 180.429688 C 112.984375 180.746094 112.546875 181.105469 112.144531 181.507812 C 111.738281 181.910156 111.378906 182.347656 111.0625 182.820312 C 110.746094 183.292969 110.480469 183.792969 110.261719 184.320312 C 110.042969 184.847656 109.878906 185.386719 109.769531 185.945312 C 109.65625 186.503906 109.601562 187.070312 109.601562 187.640625 C 109.601562 188.207031 109.65625 188.773438 109.769531 189.332031 C 109.878906 189.890625 110.042969 190.429688 110.261719 190.957031 C 110.480469 191.484375 110.746094 191.984375 111.0625 192.457031 C 111.378906 192.929688 111.738281 193.367188 112.144531 193.769531 C 112.546875 194.171875 112.984375 194.53125 113.457031 194.847656 C 113.929688 195.164062 114.429688 195.433594 114.957031 195.652344 C 115.484375 195.867188 116.027344 196.03125 116.585938 196.144531 C 117.144531 196.253906 117.707031 196.308594 118.277344 196.308594 L 288.183594 196.308594 L 250.945312 233.539062 C 250.53125 233.9375 250.160156 234.375 249.832031 234.847656 C 249.503906 235.324219 249.226562 235.824219 249 236.351562 C 248.773438 236.882812 248.597656 237.429688 248.480469 237.992188 C 248.363281 238.554688 248.300781 239.125 248.296875 239.699219 C 248.289062 240.277344 248.34375 240.847656 248.453125 241.410156 C 248.558594 241.976562 248.722656 242.527344 248.941406 243.058594 C 249.160156 243.59375 249.429688 244.097656 249.746094 244.578125 C 250.066406 245.058594 250.429688 245.5 250.835938 245.90625 C 251.242188 246.316406 251.6875 246.675781 252.167969 246.996094 C 252.644531 247.316406 253.152344 247.582031 253.683594 247.800781 C 254.21875 248.019531 254.769531 248.183594 255.332031 248.292969 C 255.898438 248.398438 256.46875 248.453125 257.046875 248.445312 C 257.621094 248.441406 258.191406 248.378906 258.753906 248.261719 C 259.320312 248.144531 259.867188 247.96875 260.394531 247.742188 C 260.921875 247.515625 261.425781 247.238281 261.898438 246.910156 C 262.375 246.585938 262.808594 246.214844 263.210938 245.800781 L 315.261719 193.769531 C 315.664062 193.367188 316.023438 192.929688 316.339844 192.457031 C 316.65625 191.984375 316.921875 191.484375 317.140625 190.957031 C 317.359375 190.429688 317.523438 189.890625 317.636719 189.332031 C 317.746094 188.773438 317.800781 188.207031 317.800781 187.640625 C 317.800781 187.070312 317.746094 186.503906 317.636719 185.945312 C 317.523438 185.390625 317.359375 184.847656 317.140625 184.320312 C 316.921875 183.792969 316.65625 183.296875 316.339844 182.820312 C 316.023438 182.347656 315.664062 181.910156 315.261719 181.507812 Z M 315.261719 181.507812 "
                />
            </g>
        </g>
    </svg>
);

export const AlertIcon = (
    { className = "nav-icon alert-icon" } // Clase específica para el icono de alerta
) => (
    <svg viewBox="0 0 20 20" fill="currentColor" className={className}>
        <path
            fillRule="evenodd"
            d="M8.257 3.099c.636-1.179 2.852-1.179 3.488 0l5.516 10.197A2.024 2.024 0 0115.734 16H4.266a2.024 2.024 0 01-1.527-2.704l5.516-10.197zM9 8a1 1 0 011-1h.01a1 1 0 110 2H10a1 1 0 01-1-1zm.01 2a1 1 0 100 2h.004a1 1 0 100-2h-.004z"
            clipRule="evenodd"
        />
    </svg>
);

// Si quieres un icono para el logo (HomeIcon) aunque uses una imagen, puedes mantenerlo aquí
export const HomeIcon = ({ className = "nav-icon" }) => (
    <svg viewBox="0 0 20 20" fill="currentColor" className={className}>
        <path d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z" />
    </svg>
);

export const MailSentIcon = () => (
    <svg viewBox="0 0 20 20" fill="currentColor" className="vcp-icon">
        <path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z" />
        <path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z" />
    </svg>
);
export const CheckCircleIcon = () => (
    <svg viewBox="0 0 20 20" fill="currentColor" className="vcp-icon success">
        <path
            fillRule="evenodd"
            d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
            clipRule="evenodd"
        />
    </svg>
);
export const ExclamationCircleIcon = () => (
    <svg viewBox="0 0 20 20" fill="currentColor" className="vcp-icon error">
        <path
            fillRule="evenodd"
            d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z"
            clipRule="evenodd"
        />
    </svg>
);
